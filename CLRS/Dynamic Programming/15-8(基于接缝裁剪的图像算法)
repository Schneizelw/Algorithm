#include<iostream>
#include<vector>
#include<limits>
#include<iomanip>
using namespace std;

void compression(vector<vector<int>> d)
{
    vector<vector<int>> t,trial;
    int row = d.size();
    int col = d[0].size();
    t.resize(row+1);
    trial.resize(row);
    for(int i=0;i<=row;++i) t[i].resize(col+2);
    for(int i=0;i<row;++i) trial[i].resize(col);
    //let the d's first row assign to t[1]
    for(int j=1;j<=col;++j){
        t[1][j] = d[0][j-1];
    }
    //initializing the whole column of 0 and col+1 as INT_MAX
    for(int i=1;i<=row;++i){
        t[i][0] = t[i][col+1] = INT_MAX;
    }

    int MIN;
    for(int i=2;i<=row;++i){
        for(int j=1;j<=col;++j){
            //select the minimun damage assign to t[i][j] from
            // t[i-1][j], t[i-1][j-1] and  t[i-1][j+1]
            //1 as upper left,2 as upper,3 as upper right
            MIN = t[i-1][j]>t[i-1][j-1]?t[i-1][j-1]:t[i-1][j];
            trial[i-1][j-1] = MIN==t[i-1][j-1] ? 1:2;
            MIN = t[i-1][j+1]>MIN?MIN:t[i-1][j+1];
            if(MIN==t[i-1][j+1]) trial[i-1][j-1]=3;
            t[i][j] =  MIN+d[i-1][j-1];
            //the upper damage is bigger than the upper left
        }
    }

    //find the result(minimun in t[row]) and print
    int result_col;
    MIN = INT_MAX;
    for(int j=1;j<=col;++j){
        if(MIN>t[row][j]){
            MIN = t[row][j];
            result_col = j-1;
        }
    }
    cout << "answer:"<<MIN <<endl;
    //input t
    for(int i=1;i<=row;++i){
        for(int j=1;j<=col;++j){
            cout << setw(5) << t[i][j];
        }
        cout << endl;
    }

    //print the trial
    cout << "("<<row << ","<< result_col+1 <<")" << d[row-1][result_col] <<endl;
    for(int j=result_col,i=row-1;i>=1;--i){
        switch(trial[i][j]){
        case 1:
            cout << "("<<i << ","<< j <<")" << d[i-1][j-1] <<endl;
            j = j-1;
            break;
        case 2:
            cout << "("<<i << ","<< j+1 <<")" << d[i-1][j] <<endl;
            break;
        case 3:
            cout << "("<<i << ","<< j+2 <<")" << d[i-1][j+1] <<endl;
            j = j+1;
            break;
        }
    }
}
int main()
{
    vector<vector<int>> d={
    {3,2,1,4,5},
    {6,1,7,2,1},
    {2,9,6,1,5},
    {1,3,5,8,6},
    {9,7,8,1,1}
    };
    compression(d);
}
